"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import environ
from rest_framework.authentication import SessionAuthentication

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
import os

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/
env = environ.Env()
environ.Env.read_env(BASE_DIR.parent / '.env')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-3l^=!j%afy9=rvlems%tqa_4y*19d3+$k#_0gg)v8830c*s0zp"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

READONLY_DB_USER = os.environ.get('READONLY_POSTGRES_USER')
READONLY_DB_PASSWORD = os.environ.get('READONLY_POSTGRES_PASSWORD')
# Application definition
E2B_API_KEY = os.getenv('E2B_API_KEY')

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "users",
    'django.contrib.sites',
    'corsheaders',
    "repositories",
    'rest_framework',
    "django_celery_beat",
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
]

MIDDLEWARE = [
        'corsheaders.middleware.CorsMiddleware',

    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware"
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': env.db()
}
CELERY_BROKER_URL = env('CELERY_BROKER_URL')
CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND')

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}
# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

SOCIALACCOUNT_STORE_TOKENS = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = 'users.CustomUser'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Add these settings at the bottom
SITE_ID = 1

ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"

LOGIN_REDIRECT_URL = "/dashboard"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

# Allauth provider settings
SOCIALACCOUNT_PROVIDERS = {
    'github': {
        'SCOPE': [
            'repo', # Ask for permission to read repositories
        ],
    }
}
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "https://7352-2405-201-1c-1029-3959-dfcc-2e4a-d18.ngrok-free.app",
    "https://woodcock-wondrous-infinitely.ngrok-free.app" # The origin of our React frontend
]
SESSION_COOKIE_SECURE = True  # Required for HTTPS
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'None'  # Needed for cross-origin
CSRF_COOKIE_SAMESITE = 'None'
# settings.py
SESSION_COOKIE_DOMAIN = None  # Allow any domain
SESSION_COOKIE_PATH = '/'
SESSION_COOKIE_SECURE = True  # Required for ngrok (HTTPS)
SESSION_COOKIE_SAMESITE = 'None'  # Required for cross-origin
SESSION_COOKIE_HTTPONLY = True

# Also update CSRF settings
CSRF_COOKIE_DOMAIN = None
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = 'None'
# This is the crucial setting that allows the browser to send
# the session cookie to our backend.
ACCOUNT_REDIRECT_WHITELIST = [
    "https://woodcock-wondrous-infinitely.ngrok-free.app",
]
CORS_ALLOW_CREDENTIALS = True
SOCIALACCOUNT_LOGIN_ON_GET = True
ACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_AUTO_SIGNUP = True
CSRF_TRUSTED_ORIGINS = [
    "https://example.com",
    "https://www.example.com",
    "https://subdomain.example.com",
    "http://localhost:3000",  # if you're using React/Vite locally
    "http://127.0.0.1:5173",
    "http://localhost:5173",
      "https://woodcock-wondrous-infinitely.ngrok-free.app"  # for Vite dev server
]
SOCIAL_REDIRECT_HOST = "woodcock-wondrous-infinitely.ngrok-free.app"



    
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}
