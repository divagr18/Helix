# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=helix
      - POSTGRES_PASSWORD=helix
      - POSTGRES_DB=helix_dev
    ports:
      - "5432:5432"

  cache:
    image: redis:7

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app # Mount local code for hot-reloading
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - cache

  frontend:
    # We don't need a Dockerfile for the dev server
    image: node:18
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true

  worker:
    build: ./backend # Uses the same image as the backend!
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - backend # It needs the code and DB to be ready
      - cache

volumes:
  postgres_data:
