version: '3.8'

services:
  db:
    image: pgvector/pgvector:pg15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=helix
      - POSTGRES_PASSWORD=helix
      - POSTGRES_DB=helix_dev
    ports:
      - "5432:5432"

  cache:
    image: redis:7

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - repo_cache:/var/repos
      - ./scripts:/app/scripts
      - temp_uploads:/app/coverage_uploads # Mount scripts for backend access
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - cache

  frontend:
    image: node:18
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true

  worker:
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    command: python3 -m celery -A config worker -l info
    volumes:
      - repo_cache:/var/repos
      - ./scripts:/app/scripts
      - temp_uploads:/app/coverage_uploads # Mount scripts for worker access
    env_file:
      - ./.env
    depends_on:
      - backend
      - cache

  beat:
    build: ./backend
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
      - ./scripts:/app/scripts # Mount scripts for beat access
    depends_on:
      - db
      - cache
    env_file:
      - ./.env

volumes:
  postgres_data:
  repo_cache: {}
  temp_uploads: {}
