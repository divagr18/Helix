// src/components/activity/InsightDetails.tsx
import React from 'react';
import { Link } from 'react-router-dom';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Badge } from '@/components/ui/badge';
import { GitCommit, GitBranchPlus, GitBranch, FileMinus, AlertCircle, Loader2, MousePointerSquareDashed as MousePointerSquare } from 'lucide-react';
import { type Insight } from '@/types';

// Helper to get an icon and color for each insight type
const getInsightVisuals = (type: string): { Icon: React.ElementType, color: string } => {
    switch (type) {
        case 'SYMBOL_ADDED':
            return { Icon: GitBranchPlus, color: 'text-green-500' };
        case 'SYMBOL_REMOVED':
            return { Icon: GitBranchMinus, color: 'text-red-500' };
        case 'SYMBOL_MODIFIED':
            return { Icon: GitBranch, color: 'text-blue-500' };
        default:
            return { Icon: GitCommit, color: 'text-muted-foreground' };
    }
};

interface InsightDetailsProps {
    commitHash: string | null;
    insights: Insight[];
    isLoading: boolean;
}

export const InsightDetails: React.FC<InsightDetailsProps> = ({ commitHash, insights, isLoading }) => {

    // Renders the main content area
    const renderContent = () => {
        if (isLoading) {
            return <div className="flex justify-center items-center h-full"><Loader2 className="h-8 w-8 animate-spin text-primary" /></div>;
        }

        if (!commitHash) {
            return (
                <div className="flex flex-col justify-center items-center h-full text-center text-muted-foreground p-8">
                    <MousePointerSquare className="h-12 w-12 mb-4" />
                    <h3 className="text-lg font-semibold">Select a Commit</h3>
                    <p className="max-w-xs">Click on a commit in the graph to see the specific changes and insights generated by Helix.</p>
                </div>
            );
        }

        if (insights.length === 0) {
            return (
                <div className="text-center p-8 text-muted-foreground">
                    <h3 className="text-lg font-semibold">No Helix Insights</h3>
                    <p>No specific insights were generated for this commit. It may have been a documentation update, a merge, or a change to a non-code file.</p>
                </div>
            );
        }

        return (
            <ScrollArea className="h-full">
                <div className="p-4 md:p-6 space-y-4">
                    {insights.map(insight => {
                        const { Icon, color } = getInsightVisuals(insight.insight_type);

                        // Split the message to insert the interactive link
                        const messageParts = insight.message.split("'");

                        return (
                            <div key={insight.id} className="flex items-start gap-4 p-3 rounded-lg bg-card/50 hover:bg-card transition-colors">
                                <div className={`mt-1 ${color}`}>
                                    <Icon />
                                </div>
                                <div className="flex-grow">
                                    <div className="flex items-center justify-between">
                                        <Badge variant="outline" className="font-mono text-xs">
                                            {insight.get_insight_type_display}
                                        </Badge>
                                        <span className="text-xs text-muted-foreground">
                                            {new Date(insight.created_at).toLocaleTimeString()}
                                        </span>
                                    </div>
                                    <p className="mt-2 text-sm text-foreground leading-relaxed">
                                        {messageParts[0]}
                                        {insight.related_symbol ? (
                                            <Link to={`/symbol/${insight.related_symbol.id}`} className="font-semibold text-primary hover:underline mx-1">
                                                '{insight.related_symbol.name}'
                                            </Link>
                                        ) : (
                                            // Render non-interactive if symbol was deleted or not applicable
                                            <span className="font-semibold text-foreground/80 mx-1">'{insight.data.name}'</span>
                                        )}
                                        {messageParts.slice(2).join("'")}
                                    </p>
                                    <p className="text-xs text-muted-foreground mt-1">
                                        in <span className="font-mono">{insight.data.file_path}</span>
                                    </p>
                                </div>
                            </div>
                        );
                    })}
                </div>
            </ScrollArea>
        );
    };

    return (
        <div className="flex flex-col h-full">
            <div className="p-3 border-b border-border flex-shrink-0">
                <h3 className="font-semibold text-foreground">Insight Details</h3>
                {commitHash && (
                    <p className="text-xs text-muted-foreground font-mono" title={commitHash}>
                        Commit: {commitHash.substring(0, 12)}...
                    </p>
                )}
            </div>
            <div className="flex-grow min-h-0">
                {renderContent()}
            </div>
        </div>
    );
};